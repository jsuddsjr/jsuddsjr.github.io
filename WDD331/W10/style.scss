$panels: 4;
$panel-speed: 300ms;

.curtain {
  width: 100%; /* Ensures the component is the full screen width */
  height: 100vh; /* Take up the entire height of the viewport */
  overflow: hidden; /* Allows us to slide the panels outside the container without them showing */

  &__wrapper {
    width: 100%; // Wrapper covers the entire area of the curtain.
    height: 100%;
    position: relative;
  }

  &__panel {
    width: 100% / $panels; /* Calculate size of panels */
    height: 100vh; /* Used for demo purposes */
    position: absolute; /* Needed to define the z-index */
    transition: all 1s ease-out; /* Animates the sliding transition */
  }

  @for $index from 1 through $panels {
    &__panel:nth-of-type(#{$index}) {
      left: 25% * ($index - 1);
      background-color: adjust-hue($color: #39a5db, $degrees: $index * 10);
      transform: translateX(-100% * $index);
      transition-delay: $panel-speed * ($panels - $index);
      z-index: $index;
    }
  }

  &__prize {
    background: no-repeat 50% 50% / 800px
      url("http://jsuddsjr.github.io/files/surprise.jpg");
    position: absolute; /* Forces the prize position into the container start */
    z-index: -1; /* Places the prize behind the panels, which are z-index 2 */
    width: 100%;
    height: 100%;
    transition: opacity 1s ease-out;

    .shine {
      background: no-repeat
        url("http://jsuddsjr.github.io/files/vector-shine.svg");
      position: absolute;
      height: 100px;
      width: 100px;
      animation: sparkle 2s ease-in-out infinite;

      // Windshield
      &:nth-child(1) {
        top: calc(50vh - 300px);
        left: calc(50vw + 120px);
      }

      // Hood
      &:nth-child(2) {
        top: calc(50vh - 120px);
        left: calc(50vw - 320px);
        animation-delay: 500ms;
      }

      // Bumper
      &:nth-child(3) {
        top: calc(50vh + 120px);
        left: calc(50vw + 150px);
        animation-delay: 250ms;
      }
    }
  }
}

input[type="checkbox"] {
  position: absolute; /* Force the checkbox at the start of the container */
  cursor: pointer; /* Indicate the curtain is clickable */
  width: 100%; /* The checkbox is as wide as the component */
  height: 100%; /* The checkbox is as tall as the component */
  z-index: 100; /* Make sure the checkbox is on top of everything else */
  opacity: 0; /* Hide the checkbox */

  &:checked ~ div.curtain__panel {
    transform: translateX(0);

    @for $index from 1 through $panels {
      &:nth-of-type(#{$index}) {
        transition-delay: $panel-speed * ($index - 1);
      }
    }
  }

  &:checked ~ div.curtain__prize {
    opacity: 0;
  }
}

@keyframes sparkle {
  0%,
  20%,
  80%,
  100% {
    opacity: 0;
  }
  50% {
    opacity: 1;
    transform: rotate(180deg);
  }
}
